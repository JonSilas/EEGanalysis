[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EEG Analysis",
    "section": "",
    "text": "Introduction\nThis is a companion guide to the module PSY4070 Practical Cognitive Neuroscience and is aimed specifically at helping you with the component of the portfolio linked to ‘EEG Analysis’. Your portfolio is worth 80% of your grade and EEG Analysis and the write up is worth 40% of the portfolio.\nFor this part of your assessment, you will have to analyse some EEG data and then answer some general questions about EEG analysis and interpret some EEG data. The EEG analysis is taught in a program called EEGLAB.\nThe resources and support in this online guide should be used in conjunction with the other forms of support available to you; in-class, via email and in one-to-ones with the module leaders. This whole guide can be downloaded as a PDF or Word document by clicking the download button in the menu and selecting your preferred format.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "index.html#how-to-use-this-bookwebsite",
    "href": "index.html#how-to-use-this-bookwebsite",
    "title": "EEG Analysis",
    "section": "How to use this book/website",
    "text": "How to use this book/website\nFor the most part, you should go through this book in a linear fashion; page-by-page. You can skip forward one page at a time by using the arrow key at the bottom right of each page. If you need to come back to some of the information here, use this as you would any website; the search bar - on the left - should help you find anything you are looking for. This website works best on a computer, not on a phone or tablet.\nYou might also find the icons in the navigation bar helpful:\n\n\n\n\n\n\n\n\nLink to github code for this book.\n\n\n\nClick to download this book as a .pdf, .docx, or .epub file.\n\n\n\nClick to share the link to the book with others.\n\n\n\nClick to switch between light and dark mode.\n\n\n\nThis work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "01-EEGLAB.html",
    "href": "01-EEGLAB.html",
    "title": "Overview",
    "section": "",
    "text": "Background\nThis guide serves as a specific set of instructions to talk you through analysing data from Jones & Ward (2019). As you know the experiment explores the differences in the ability to recognise objects when they’ve been encoded under two different conditions. Specifically, items to be remembered were either presented rhythmically or arrhythmically. The data we will examine in this tutorial was recorded at the recognition phase – so there is no perceptual difference between the items we are comparing, the only difference between them is that when the items were presented to be remembered they were presented rhythmically or arrhythmically. We will use a well-established technique that will allow us to generate an Event Related Potential (ERP). This will allow us to examine the electrophysiological response generated by the brain during the presentation of stimuli that were encoded under two different conditions.",
    "crumbs": [
      "Using EEGLAB",
      "Overview"
    ]
  },
  {
    "objectID": "01-EEGLAB.html#analysis",
    "href": "01-EEGLAB.html#analysis",
    "title": "Overview",
    "section": "Analysis",
    "text": "Analysis\nThis tutorial will take you through the analysis procedure for data from one participant and how to generate a ‘grand average’ – across multiple participants. You can apply the techniques you learn here to analyse the dataset that has been made available to you for portfolio. We implement the analysis in a software called EEGLAB. The primary benefit of using EEGLAB is that it is, for the most part free and extremely well supported by the online community. Whilst the initial distribution of EEGLAB required a programme called Matlab to run – EEGLAB can now be downloaded as a ‘compiled’ version. Whilst the compiled version doesn’t have all the same functions as the full Matlab version – it is easy to get up and running and operates via a Graphic User Interface (GUI), so you won’t need to code.\nIf you would prefer to install Matlab and use the EEGLAB that is attached to it you are welcome to do so, but we will be providing instruction and support on the stand alone compiled version of EEGLAB.",
    "crumbs": [
      "Using EEGLAB",
      "Overview"
    ]
  },
  {
    "objectID": "01-EEGLAB.html#teaching-and-learning",
    "href": "01-EEGLAB.html#teaching-and-learning",
    "title": "Overview",
    "section": "Teaching and Learning",
    "text": "Teaching and Learning\nAs in all the software skills we hope you will develop in this programme, we hope that learning how to use EEGLAB is in itself a good skill to have. However, our primary goal is for you to become familiar with the analysis process of EEG, understand how data is cleaned, and manipulated in experimental settings. The idea is that you get a greater insight into the methods used in analysing EEG and how this effects the conclusions we draw about how the brain, and how cognition, works.\nYou can run through this guide on your own but there will be dedicated in class sessions where you will be able to go through the analysis and get in-person support and feedback from module staff.",
    "crumbs": [
      "Using EEGLAB",
      "Overview"
    ]
  },
  {
    "objectID": "01-EEGLAB.html#where-to-get-help",
    "href": "01-EEGLAB.html#where-to-get-help",
    "title": "Overview",
    "section": "Where to Get Help?",
    "text": "Where to Get Help?\n\nYou will be given time in class to explore EEGLAB - speak to tutors and get in person support.\nUse the Resources section for online help.\nBook an online or in-person one-to-one session with module leaders.\n\n\n\n\n\nJones, A., & Ward, E. V. (2019). Rhythmic temporal structure at encoding enhances recognition memory. Journal of Cognitive Neuroscience, 31(10), 1549–1562.",
    "crumbs": [
      "Using EEGLAB",
      "Overview"
    ]
  },
  {
    "objectID": "02-getting_started.html",
    "href": "02-getting_started.html",
    "title": "Getting Started",
    "section": "",
    "text": "Install EEGLAB\nRun the installation software and open EEGLAB on your machine.\nIf you can’t get it running on your machine, you can use machines in class and speak to staff about support on getting EEGLAB installed on loan machines.\nThe Matlab version of EEGLAB is somewhat more stable and there are more features that are available. We haven’t used this as it’s not completely free and we want what you learn to be available to you after you leave. However, if you want to install Matlab, for now Middlesex provides a licence, create an account and download Matlab here:\nOnce installed and up and running, you can follow the instructions here on how to get EEGLAB running from within Matlab:",
    "crumbs": [
      "Using EEGLAB",
      "Getting Started"
    ]
  },
  {
    "objectID": "02-getting_started.html#install-eeglab",
    "href": "02-getting_started.html#install-eeglab",
    "title": "Getting Started",
    "section": "",
    "text": "Download and install EEGLAb\n\n\n\nEEGLAB - download the compiled version\n\n\n\n\n\n\nMatlab Middlesex Licence Version\n\n\n\nEEGLAB for Matlab",
    "crumbs": [
      "Using EEGLAB",
      "Getting Started"
    ]
  },
  {
    "objectID": "02-getting_started.html#download-the-data-for-this-tutorial",
    "href": "02-getting_started.html#download-the-data-for-this-tutorial",
    "title": "Getting Started",
    "section": "Download the data for this tutorial",
    "text": "Download the data for this tutorial\n\n\n\n\n\n\nDownload the data\n\n\n\nClick here to download the data for this tutorial\n\n\nThe data for this tutorial includes data from 3 participants - this isn’t the whole data analysed in the Jones & Ward (2019) paper but a subset - we think 3 participants is enough for you to get used to analysis and produce a good ERP by the end of the tutorial.\n\n\n\n\n\n\nThe file is about 1.5 Gb and may take a while to download.\n\n\n\n\n\n\nOnce you’ve downloaded the file unzip it and extract the containing data.",
    "crumbs": [
      "Using EEGLAB",
      "Getting Started"
    ]
  },
  {
    "objectID": "02-getting_started.html#data-format",
    "href": "02-getting_started.html#data-format",
    "title": "Getting Started",
    "section": "Data format",
    "text": "Data format\nEach file is named with a participant number e.g., Participant_03. There are 3 participant datasets in total. Each participant has 3 separate files each named the same thing with different file formats:\n\n.eeg - the actual EEG data recorded digitally.\n.vhdr - the ‘header’ information, this gives us the names and spatial location of the electrodes.\n.vmrk - this file stores the ‘trigger information’; information sent from the experimental computer containing information about when a participant saw a particular stimulus or gave a specific response.\n\n\n\n\n\nJones, A., & Ward, E. V. (2019). Rhythmic temporal structure at encoding enhances recognition memory. Journal of Cognitive Neuroscience, 31(10), 1549–1562.",
    "crumbs": [
      "Using EEGLAB",
      "Getting Started"
    ]
  },
  {
    "objectID": "03-import_data.html",
    "href": "03-import_data.html",
    "title": "Import Data",
    "section": "",
    "text": "How\nIn EEGLAB click the following menus:\nA popup menu will appear, leave the boxes blank and click Ok. The defaults here are telling EEGLAB you want to import all the data (intervals) from all the electrodes (channels).\nNext a pop will appear asking you what you want to do with the new dataset - make sure you Name it and select the option to Save it to file then click browse to select an appropriate directory. Use a simple naming convention, this data is from Participant 03, so we’ve called it p03 and saved it in a local directory, as shown in the figure below. When we save our data after further processing steps, we will amend our file names in a way that will allow us to identify what we’ve done to the data.\nAfter you’ve clicked Ok navigate back to the EEGLAB home window - this window contains useful information about your current dataset. Look through what information is displayed on the current home window. You won’t understand all of what is currently displayed here but as you progress through this tutorial you should be able to learn more about what this information means. Furthermore, the home window will be a useful way to check that the processing steps have been correctly applied to the data.",
    "crumbs": [
      "Using EEGLAB",
      "Import Data"
    ]
  },
  {
    "objectID": "03-import_data.html#how",
    "href": "03-import_data.html#how",
    "title": "Import Data",
    "section": "",
    "text": "-&gt; File\n  -&gt; Import data\n    -&gt; Using EEGLAB functions and plugins\n      -&gt; From Brain Vis. Rec. .vhdr or .ahdr file\n\n\n\n\n\n\n\n\n\nTerminology\n\n\n\n\n\nIt’s easy to get confused with a lot of different terms often used for the same thing but we’ll try to help. The terms “electrodes” and “channels” are often used interchangeably and refer to a single source of electrical activity measured from one specific location.\n\n\n\n\n\n\n\n\n\n\n\nEEGLAb does not automatically save your analysis steps\n\n\n\n\n\nMake sure you select options that will allow you to save your work.\nWe strongly recommend saving your data after every step of the analysis - this will mean that if you later encounter an issue with your analysis, it will be easy enough for you to pick up from an earlier point and not have to restart all over again. You should use your own labelling system so that you can easily identify each file and the processing that has been done to it.\n\n\n\n\n\n\n\nEEGLAB home window\n\n\n\n\n\n\n\n\nImporting after the first time\n\n\n\n\n\nYou will see a different dialogue box if this isn’t the first time you’ve imported the dataset, like below. This is nothing to worry about, name the file and click Ok to continue.",
    "crumbs": [
      "Using EEGLAB",
      "Import Data"
    ]
  },
  {
    "objectID": "03-import_data.html#test-yourself",
    "href": "03-import_data.html#test-yourself",
    "title": "Import Data",
    "section": "Test yourself",
    "text": "Test yourself\nQuestion 1 | What is the sample rate for the data you’ve just imported? \nQuestion 2 | What is the unit of the sample rate?  HzmVmAms\nQuestion 3 | What is the sample rate?  The frequency of the EEG signal.The number of times the EEG signal is digitized per second.A small ‘sample’ of the data at a specific frequency.The number of oscillations at a specific frequency.",
    "crumbs": [
      "Using EEGLAB",
      "Import Data"
    ]
  },
  {
    "objectID": "04-Eye-balling_data.html",
    "href": "04-Eye-balling_data.html",
    "title": "Eye-balling Data",
    "section": "",
    "text": "How",
    "crumbs": [
      "Using EEGLAB",
      "Eye-balling Data"
    ]
  },
  {
    "objectID": "04-Eye-balling_data.html#how",
    "href": "04-Eye-balling_data.html#how",
    "title": "Eye-balling Data",
    "section": "",
    "text": "Plot channel locations\nLet’s start by making sure that the header information was read in correctly and that the electrodes look like they are in the correct spatial location. Click:\n-&gt; Plot\n  -&gt; Channnel locations\n    -&gt; By name\n\nYou should see a schematic of a head, with labelled dots all over it. The triangle at the top represents a nose so you know the facing direction. The labels are the name of electrodes used in the international 10-20 system of EEG scalp electrode placement. Your plot should be something like what is shown below.\n\nWe can sense check this schematic representation of the spatial locations of our electrodes based on what we know about the 10-20 system. All electrodes with an odd number should be on the left of the head, those with an even number on the right and those ending in a z down the mid-line. Those electrodes starting with certain letters also indicate that they are over a specific brain region:\n\nF = Frontal\nC = Central\nP = Parietal\nO = Occipital\n\nClose the plots that are open.\n\n\nPlot continuous data\nWe can now visually examine the actual EEG data, although at this stage it is unlikely to be particularly useful given that we have done very little processing. We are going to ask EEGLAB to plot the ‘continuous’ data - that means all the EEG data is one long chunk in one graph. To do that click:\n-&gt; plot\n  -&gt; Channel data (scroll)\n\nYou should now see a plot akin to the image below.\n\nIn the first instance - this image isn’t particularly useful. the actual EEG data isn’t really visible that’s due to an ongoing direct current present in the data - the EEG amplitude is ‘drifting’ off the visible area. We will correct this later in the processing steps. However, take some time to play with the settings and see what you notice about how to navigate in this view - it will be one we return to.",
    "crumbs": [
      "Using EEGLAB",
      "Eye-balling Data"
    ]
  },
  {
    "objectID": "04-Eye-balling_data.html#test-yourself",
    "href": "04-Eye-balling_data.html#test-yourself",
    "title": "Eye-balling Data",
    "section": "Test yourself",
    "text": "Test yourself\nQuestion 1 | When plotting continuous data what do the labels plotted on the y-axis represent? \nQuestion 2 | What is the name of the international system for electrode placement?  10-1020-1010-205-5",
    "crumbs": [
      "Using EEGLAB",
      "Eye-balling Data"
    ]
  },
  {
    "objectID": "05-down_sample.html",
    "href": "05-down_sample.html",
    "title": "Down Sample",
    "section": "",
    "text": "How\nTo down sample the data for this participant click:\nA pop-up will appear, enter 250 as the new sample rate and click Ok.\nNext a pop will appear asking you what you want to do with the new dataset - make sure you Name it and select the option to Save it to file then click browse to select an appropriate directory. Use a simple naming convention, this data is from Participant 03 and has been resampled, so we’ve called it p03 resampled and saved it on a local directory, like so:\nOnce you’ve clicked Ok double check everything is as expected.",
    "crumbs": [
      "Using EEGLAB",
      "Down Sample"
    ]
  },
  {
    "objectID": "05-down_sample.html#how",
    "href": "05-down_sample.html#how",
    "title": "Down Sample",
    "section": "",
    "text": "-&gt; Tools\n  -&gt; Change sampling rate\n\n\n\n\n\n\n\n\n\nEEGLAb does not automatically save your analysis steps\n\n\n\n\n\nMake sure you select options that will allow you to save your work.\nWe strongly recommend saving your data after every step of the analysis - this will mean that if you later encounter an issue with your analysis, it will be easy enough for you to pick up from an earlier point and not have to restart all over again. You should use your own labelling system so that you can easily identify each file and the processing that has been done to it.\n\n\n\n\n\n\n\nYour EEGLAB home window should state that the Sample rate (Hz) is 250.\n\n\n\nUse your computer’s file explorer to check that the file is where you saved it - you should see two files as you named them one ending in .fdt and another ending in .set. Like this:\n\n\n\n\n\n\n\n\nEEGLAb file types\n\n\n\n\n\nThe two file types saved by EEGLAB contains different information. .set files contain the EEG structure but not the data, while .fdt files contain the EEG data but not the rest of the structure. Data structure and how data is held in memory is quite a complicated topic, if you are interested in learning more see information here",
    "crumbs": [
      "Using EEGLAB",
      "Down Sample"
    ]
  },
  {
    "objectID": "05-down_sample.html#test-yourself",
    "href": "05-down_sample.html#test-yourself",
    "title": "Down Sample",
    "section": "Test yourself",
    "text": "Test yourself\nQuestion 1 | Imagine recording from two electrodes with a sample rate of 1000 Hz for 10 seconds. How many bits of data would you have\nQuestion 2 | If the same data as in question 1 was downsampled to 500 Hz, how many bits of data would it contain? \nQuestion 3 | What’s the main reason for down sampling data?  To remove non-brain artefacts from the data.To clean the data from high frequency noise.To be able to identify the electrodes.To save space and in turn process data more quickly.",
    "crumbs": [
      "Using EEGLAB",
      "Down Sample"
    ]
  },
  {
    "objectID": "06-filtering.html",
    "href": "06-filtering.html",
    "title": "Filtering",
    "section": "",
    "text": "How\nWe are now going to filter the dataset that you have already down sampled. To do this in EEGLAB click:\nIn the window that pops up enter 0.1 for the Lower edge of the frequency pass band (Hz) and 40 for the Higher edge of the frequency pass band (Hz).\nAccept the defaults (i.e., leave blank) other sections and click Ok:\nBefore the filtering is completed you should see a graph pop-up that represents the magnitude of the filter as a function of frequency and a second graph showing its phase. The top graph is a representation of the strength of the effect of the filter for the frequency distribution of the EEG - you should see little effect between 0.1 and 40 Hz (line at zero) and then a sharp increase at 40 Hz. The bottom graph depicts the phase shifting effect of the filter on the EEG signal. In simpler terms, phase describes the relative timing of the waveforms that make up the signal. Effectively, the bottom graph tells you how “shifted” each frequency component is in comparison to a reference. This isn’t too important to understand for our practical purposes but it is important to note that filtering does have an effect on our signal of interest - albeit a small one. The graphs should look like this:\nYour filtering isn’t yet finished. Wait till the pop-up gives you the opportunity to save the dataset, give the file a name and save it in a location with the previous files. Here we’ve labelled the file p03_resampled_fl0.1_40 - this should allow us to easily identify what processing steps have been applied to this data",
    "crumbs": [
      "Using EEGLAB",
      "Filtering"
    ]
  },
  {
    "objectID": "06-filtering.html#how",
    "href": "06-filtering.html#how",
    "title": "Filtering",
    "section": "",
    "text": "-&gt; Tools  \n  -&gt; Filter the data\n    -&gt; Basic FIR filter (new, default)",
    "crumbs": [
      "Using EEGLAB",
      "Filtering"
    ]
  },
  {
    "objectID": "06-filtering.html#more-eye-balling",
    "href": "06-filtering.html#more-eye-balling",
    "title": "Filtering",
    "section": "More eye-balling",
    "text": "More eye-balling\nNow, let’s visually inspect the data to see what it looks like after filtering. You want to plot the continuous data and scroll through it, if you don’t remember how to do that you can check back to the Eye-balling chapter, specifically, Plotting continuous data.\nYour newly filtered data should look a little like the image below.\n\nAs you did when initially visually examining the data play around with the settings and explore further along the continuous data. You should now be able to identify individual electrodes and the EEG activity associated with them. If you right click on the data EEGLAB will plot the data ‘topographically’ - meaning the data at a specific time point (wherever you clicked on the plot) will be displayed in colour and mapped onto the scalp surface. A little like this:",
    "crumbs": [
      "Using EEGLAB",
      "Filtering"
    ]
  },
  {
    "objectID": "06-filtering.html#events",
    "href": "06-filtering.html#events",
    "title": "Filtering",
    "section": "Events",
    "text": "Events\nIf you scroll along far enough in the EEG data you may see some coloured vertical lines labelled with letters and numbers - a little like the figure shown below. These are commonly referred to as ‘events’ or ‘markers’. They donate a specific point in time when something happened during the experimental protocol. So, for example, an event might be when a participant was presented with a stimulus or when the participant made a response on the keyboard. Given that our data is from the Jones & Ward (2019) paper - events might be when a participant was shown an object in a rhythmic condition, or it could represent stimuli presented arrhythmically.",
    "crumbs": [
      "Using EEGLAB",
      "Filtering"
    ]
  },
  {
    "objectID": "06-filtering.html#test-yourself",
    "href": "06-filtering.html#test-yourself",
    "title": "Filtering",
    "section": "Test yourself",
    "text": "Test yourself\nQuestion 1 | What effect will a 10 Hz high pass filter have on the data?  Allow frequencies below 10 Hz in the data.Allow frequencies at 10 Hz only in the data.Allow frequencies above 10 Hz in the data.Remove frequencies at 10 Hz only in the data.\nQuestion 2 | What is the name of the plot that graphically represents EEG activity for a specific point in time by mapping it on the scalp?\n\n\n\n\nJones, A., & Ward, E. V. (2019). Rhythmic temporal structure at encoding enhances recognition memory. Journal of Cognitive Neuroscience, 31(10), 1549–1562.",
    "crumbs": [
      "Using EEGLAB",
      "Filtering"
    ]
  },
  {
    "objectID": "07-interpolation.html",
    "href": "07-interpolation.html",
    "title": "Interpolation",
    "section": "",
    "text": "How",
    "crumbs": [
      "Using EEGLAB",
      "Interpolation"
    ]
  },
  {
    "objectID": "07-interpolation.html#how",
    "href": "07-interpolation.html#how",
    "title": "Interpolation",
    "section": "",
    "text": "Identification of bad electrodes\nThere aren’t many bad electrodes in the data from the participants that we’ve given you, the specific example we are using comes from Participant 24 - you may not yet be able to see any bad electrodes in the specific file you are looking at.\nInitial plotting of the continuous data does indeed show unusual fluctuations in voltage, greater than neighbouring electrodes that seem to continue whilst event markers are visible.\n\nA provisional examination suggests that electrode TP10 is unusual. Let’s examine it a little closer by just displaying that electrode and its closest neighbours.\nOn the plot window click:\n-&gt; Settings\n  -&gt; Number of channels to display\n\nAnd enter 3 in the pop-up window.\n\nThen scroll along the horizontal scroll bar until electrode TP10is displayed centrally.\n\nHere - it should now be quite visible, that electrode TP10 is displaying unusual continuous large fluctuations in voltage compared to other electrodes. Let’s interpolate it.\n\n\nInterpolation\nClose the plot window and on the EEGLAB home screen click:\n-&gt; Tools\n  -&gt; Interpolate electrodes\n  \n\nIn the resultant pop-up window select Select from data channels\n\nThen, select the electrode you want to interpolate, in this case TP10 and click Ok.\n\nMake sure you save the dataset.\n\n\n\nCheck the interpolation\nNow you’ve interpolated the channel let’s plot the data as we did before and look at the same time to see what the electrode looks like.\n As you can see TP10 now looks far more like the other electrodes around it. Let’s take a closer look:\n Clearly, the artefactual noise that was previously present in the electrode is now no longer visible.",
    "crumbs": [
      "Using EEGLAB",
      "Interpolation"
    ]
  },
  {
    "objectID": "07-interpolation.html#test-yourself",
    "href": "07-interpolation.html#test-yourself",
    "title": "Interpolation",
    "section": "Test yourself",
    "text": "Test yourself\nQuestion 1 | Should you interpolate an electrode with large artefactual fluctuations only present when no triggers are in the data?  YesNo\nQuestion 2 | Should you interpolate an electrode that shows no voltage fluctuations at all?  YesNo",
    "crumbs": [
      "Using EEGLAB",
      "Interpolation"
    ]
  },
  {
    "objectID": "08-re-reference.html",
    "href": "08-re-reference.html",
    "title": "Re-reference",
    "section": "",
    "text": "How\nTo re-reference the data to the average reference in EEGLAB click:\nIn the pop-up that appears, click Compute average reference and select Ok.\nYou will then be prompted to name the dataset, make sure you also select the option to Save it as a file and append the name with an appropriate suffix, we used _rr to denote re-reference.\nYour modification to the dataset should now be visible in the EEGLAB home window:",
    "crumbs": [
      "Using EEGLAB",
      "Re-reference"
    ]
  },
  {
    "objectID": "08-re-reference.html#how",
    "href": "08-re-reference.html#how",
    "title": "Re-reference",
    "section": "",
    "text": "-&gt; Tools\n  -&gt; Re-reference the data",
    "crumbs": [
      "Using EEGLAB",
      "Re-reference"
    ]
  },
  {
    "objectID": "08-re-reference.html#test-yourself",
    "href": "08-re-reference.html#test-yourself",
    "title": "Re-reference",
    "section": "Test yourself",
    "text": "Test yourself\nQuestion 1 | In EEG analysis, what does ‘’voltage’’ measure? \nQuestion 2 | Why is re-referencing important in EEG analysis?  To enhance signal qualityTo calculate power spectrumTo measure brainwave frequenciesTo normalize voltage fluctuations",
    "crumbs": [
      "Using EEGLAB",
      "Re-reference"
    ]
  },
  {
    "objectID": "09-ICA.html",
    "href": "09-ICA.html",
    "title": "ICA",
    "section": "",
    "text": "How",
    "crumbs": [
      "Using EEGLAB",
      "ICA"
    ]
  },
  {
    "objectID": "09-ICA.html#how",
    "href": "09-ICA.html#how",
    "title": "ICA",
    "section": "",
    "text": "Decompose data into independent components\nLike interpolation, conducting successful ICA and subsequent removal of components from the data will take some practice. In the first instance do the following in EEGLAB:\n-&gt; Tools\n  -&gt; Decompose data by ICA\n  \n\nFor ICA algorithm to use (click to select) make sure you choose FastICA picard.m (fastest) and then click Ok\n\n\n\n\n\n\n\nICA processing time\n\n\n\n\n\nICA, even the “fastest” option can take a while to compute - be patient. You can check the progress of the any EEGLAB process by looking at the EEGLAB background terminal, when you see the word Done. you know the process is over.\n\n\n\n\nOnce completed you should be able to view that your data now has ICA weights:\n\n\n\nInspect ICA components\nNow that the data has been decomposed into independent components, we need to identify which component is most likely contributing to ocular artefacts so that we can remove it from the data. The most easily identifiable and hence clearest component to remove from the dataset is usually the one that best corresponds to a blink. The topography, temporal distribution and activity power spectrum of a blink are relatively specific and can usually be identified via visual inspection. This will take practice and experience but we’ll talk you through it and you can always ask for help in class.\nFirst click:\n-&gt; Tools\n  -&gt; Inspect/label components by map\n  \n\nAccept the defaults for the next pop-up window to plot all components, click Ok.\n\nAgain, it is likely that this will result in more than 35 components and so EEGLAB asks you to confirm that you are happy with several pop-up windows, click Ok.\n\nIt will take a minute or so but the resultant pop-up windows should plot all components topographically, like so:\n\nThese are spatial distributions of the independent components extracted from the continuous EEG data. They are in order so that the first component explains the most amount of variance in the data. Blinks often contribute a good amount to the ongoing EEG data and are easily separable from other components, as such they are often found in the first five components (but not always). We will have to identify blinks based on a few different aspects. Each component can be examined further by clicking on the number. Your data will look different to mine, but in this example, I’ve clicked on the first component to explore it further, this results in a figure like the one shown below.\n\nThe information here leads us to think that this component is a typical blink for the following reasons. A typical blink has:\n\nA spatial distribution of electrical activity focused bilaterally on the very front of the scalp.\nA sporadic and random distribution of trials throughout the continuous data.\nAn activity power spectrum with little power above the 10Hz range.\n\nnumbers correspond to those in the graphical representation below\n\nThis might still be difficult to identify, let’s look at another component with similar topography to separate it from a blink:\n\nAlthough this component shares a similar topography to the blink component, it is focused over a specific set of trials and the activity power spectrum includes higher amplitudes all the way up to 40 Hz - this is less likely to be a component indicative of EEG activity caused by a blink.\n\n\n\n\n\n\nValance\n\n\n\n\n\nWhether positive or negative (i.e., blue or red) on the component topographical map isn’t relevant to identifying whether or not what you are looking at is a component describing a blink. Often, two ‘blink’ components can be identified with opposite valences.\n\n\n\nOnce we have identified which component is most likely to be indicative of a blink, we should note down the number of that component and then move on to the next stage of removing that component from the data.\n\n\nChecking the data before component removal\nNow that we have separated the EEG data into independent components and identified which component is most likely to be a blink before we go any further, we should visually inspect our continuous EEG data and identify clear blinks. Plot the continuous data(if you’ve forgotten how see - Eye-balling). Blinks are easily and immediately identifiable in continuous EEG data - there is a large and obvious voltage deflection focused on frontal electrodes that lasts approximately 150 ms.\nIn the image below, we’ve highlighted all the identifiable blink in a section of continuous EEG.\n\nIf you’re not sure what you are looking at is a blink, right click on the peak of activation and you should see a typical blink topography.\n\nMake a note of where you can see these very clear blinks because we want to go back to this section of the data and compare it after we’ve removed the blink component.\n\n\nRemoving the ‘blink’ component from the data\nNow we’ve identified the blink component in the data let’s remove it:\n-&gt; Tools\n  -&gt; Remove components from the data\n\nEnter the component(s) that you identified in your data. In our case, we found both components 1 and 2 were related to blink activity, so we add this in the box List of component(s) to remove from the data separated by a space.\n\n\n\n\n\n\nYour component(s)\n\n\n\nThis may be different to the component number we have identified here, if you’re not sure, seek support in class.\n\n\n\nClick Accept on the next pop-up window.\n\nMake sure you click Save it as file in the next pop-up window and give it an appropriately named suffix, we’ve used _ICA.\n\n\n\nCheck the blink reduction\nFinally, plot your continuous data and go back to the section where you had previously identified blinks. Your dataset should now look very similar but with the blinks removed. If there are still blinks in the data or there appears to be obvious changes to the data that aren’t related to the blinks, you need to re-consider what components you remove from the data. Below is an image of the same data as that we plotted above but now with the blink components removed:",
    "crumbs": [
      "Using EEGLAB",
      "ICA"
    ]
  },
  {
    "objectID": "09-ICA.html#test-yourself",
    "href": "09-ICA.html#test-yourself",
    "title": "ICA",
    "section": "Test yourself",
    "text": "Test yourself\nQuestion 1 | How is ICA most commonly used in the cleaning of EEG data?  It enhances high quality signal componentsIt separates mixed signals into distinct componentsIt amplifies brainwave signalsIt removes high-frequency noise\nQuestion 2 | What characteristic helps to identify blink components during the inspection of ICA components?   Spatial distribution focused on frontal electrodesConsistent distribution of trialsSpatial distribution focused on occipital electrodesActivity power spectrum above 30Hz\nQuestion 3 | What EEG feature is crucial for identifying blink components?",
    "crumbs": [
      "Using EEGLAB",
      "ICA"
    ]
  },
  {
    "objectID": "10-artefact_rejection.html",
    "href": "10-artefact_rejection.html",
    "title": "Artefact Rejection",
    "section": "",
    "text": "How\nFor the most part we aren’t going to tinker with the recommended settings that EEGLAB provides and accept their recommendations for rejecting sections of the data:\nAccept the defaults in the coming pop-up window and simply click Ok.\nCompleting the artefact scanning and rejection can take a while so wait for the Done. message on the EEGLAB background terminal.\nMake sure you select Save it as file: and choose a sensible suffix so you can later easily identify the data and what has been done to it, we’ve used _ar.",
    "crumbs": [
      "Using EEGLAB",
      "Artefact Rejection"
    ]
  },
  {
    "objectID": "10-artefact_rejection.html#how",
    "href": "10-artefact_rejection.html#how",
    "title": "Artefact Rejection",
    "section": "",
    "text": "-&gt; Tools\n  -&gt; Reject data using Clean Rawdata and ASR",
    "crumbs": [
      "Using EEGLAB",
      "Artefact Rejection"
    ]
  },
  {
    "objectID": "10-artefact_rejection.html#test-yourself",
    "href": "10-artefact_rejection.html#test-yourself",
    "title": "Artefact Rejection",
    "section": "Test yourself",
    "text": "Test yourself\nQuestion 1 | In the traditional approach of artefact rejection, what are segments marked as ‘bad’ based on?  Absolute voltageRelative voltageFrequency informationElectrode positions\nQuestion 2 | In EEGLAB’s automated artefact rejection, data regions are rejected if they exceed how many times the standard deviation?  10 times15 times20 times25 times\nQuestion 3 | What is one significant difference between EEGLAB’s automated artefact rejection and traditional artefact rejection approaches?  EEGLAB rejects segments after segmentationEEGLAB uses frequency-based rejectionEEGLAB requires manual marking of segmentsEEGLAB rejects sections of continuous data",
    "crumbs": [
      "Using EEGLAB",
      "Artefact Rejection"
    ]
  },
  {
    "objectID": "11-segmentation.html",
    "href": "11-segmentation.html",
    "title": "Segmentation",
    "section": "",
    "text": "How",
    "crumbs": [
      "Using EEGLAB",
      "Segmentation"
    ]
  },
  {
    "objectID": "11-segmentation.html#how",
    "href": "11-segmentation.html#how",
    "title": "Segmentation",
    "section": "",
    "text": "Segment\nEEGLAB allows you to segment the data and, at the same time, conduct a baseline correction.\n-&gt; Tools\n  -&gt; Extract epochs\n  \n\nIn the next pop-up window, we want to specify the events, we’ll first lock to the presentation of images during the rhythmic condition so click on the three dots ... and select the trigger S 10. We want to specify 100 ms before the image and up to one second after as our epoch. To do so, in the Epoch limits [start, end] in seconds enter 0.1 1.\n\nIn the next pop-up save it so you can identify the dataset as one that is segmented specifically for the rhythmic condition.\n\n\n\nBaseline correct\nAn automatic pop-up will prompt you to baseline correct, the default should use the pre-stimulus period as a baseline and this is what we want so you can simply accept by clicking Ok.\n\nYou’ll be prompted again to save the data after baseline correcting, you can add the suffix _bc for ‘baseline correct’ and save.\n\n\n\nPlot the data\nYou can now see in the EEGLAB home window that the dataset consisted of segmented data with an epoch that starts at -100 ms from the event and ends just before 1000 ms. Further, there are far fewer events in the data file as we’ve selected only those relevant to this condition.\n\nIf we plot the data, we can see it is no longer continuous, click:\n-&gt; Plot\n  -&gt; Channel data (scroll)\n  \nYou should see something quite different to what you’ve seen before using this function, a little like what’s below.\n\nThis is no longer continuous data but rather the segments around the specific even of interest that have been stitched together. To generate an ERP, we can average across each segment and plot the average, this is simple enough to do in EEGLAB, click:\n-&gt; Plot\n   -&gt; Channel ERPs\n     -&gt; In scalp/rect. array\n     \nAccept the defaults in the pop-up window and click Ok.\n\nYou should now be looking at an ‘Event Related Potential’ or ‘ERP’ - all activity within one condition, averaged over repeated trials and centred around an event. You should have one plot for each electrode and the electrodes are plotted where they appear on a topographical representation of the scalp.\n\nYou can click on any electrode for a closer look at the ERP for that electrode.\n\n\n\nSegment the next condition\nWe now want to extract the data averaged around the ‘arrhythmic’ condition. To do this we need to load a dataset before we run the segmentation procedure, in our case we labelled the file P03_resampled_fl0.1_40_rr_ICA)ar, click:\n-&gt; File\n  -&gt; Load existing dataset\nSelect your file that has been resampled, filtered, interpolated (if needed), re-referenced, ICA blink reduction and artefact rejected.\n\nOnce you’ve loaded the file - we want to segment based on the arrhythmic condition. To do so follow through the previous steps in this chapter from Segment. But this time, segment around the trigger S 13.\n\n\n\n\n\n\nTrigger values\n\n\n\n\n\nWhen you are segmenting the data, it’s important you remember that you need to do so twice for each participant, remember the trigger codes:\nS 10 = Rhythmic condition\nS 13 = Arrhythmic condition\n\n\n\nQuestion 1 | In EEG analysis, what’s another word for ‘segment’? \nQuestion 2 | What is EEG activity that shifts to a mean of zero during baseline correction?  Post-stimulus intervalPre-stimulus intervalAlpha band intervalTheta band interval\n\n\n\n\nJones, A., & Ward, E. V. (2019). Rhythmic temporal structure at encoding enhances recognition memory. Journal of Cognitive Neuroscience, 31(10), 1549–1562.",
    "crumbs": [
      "Using EEGLAB",
      "Segmentation"
    ]
  },
  {
    "objectID": "12-grandaverage.html",
    "href": "12-grandaverage.html",
    "title": "All Participants",
    "section": "",
    "text": "Repeating the steps.\nYou will need to go back through the steps you’ve completed in the order they appeared.",
    "crumbs": [
      "Using EEGLAB",
      "All Participants"
    ]
  },
  {
    "objectID": "12-grandaverage.html#repeating-the-steps.",
    "href": "12-grandaverage.html#repeating-the-steps.",
    "title": "All Participants",
    "section": "",
    "text": "Import the data so it can be read by EEGLAB.\n\nVisually examine the data briefly to make sure it’s loaded properly.\n\nDown sample the data so subsequent analysis isn’t so computationally demanding.\n\nFilter the data to remove unwanted frequencies.\nInterpolate bad electrodes only if needed - some data won’t need any interpolation.\nRe-reference the data so that the average of all electrodes is taken as the average.\nRemove blink artefacts using ICA.\nCheck for any remaining artefacts and reject sections of data that include them.\nSegment the continuous data and average across both conditions to produce your ERPs.",
    "crumbs": [
      "Using EEGLAB",
      "All Participants"
    ]
  },
  {
    "objectID": "12-grandaverage.html#grand-average",
    "href": "12-grandaverage.html#grand-average",
    "title": "All Participants",
    "section": "Grand average",
    "text": "Grand average\nA grand average ERP is the average of all ERPs for each individual participant - it isn’t used for statistical analysis but provides an excellent visual representation of the ERP data across participants for each condition. It’s not the only type of representation of ERPs but certainly the most common. Once you’ve completed the analysis steps for all of the participant’s data in the downloadable data you can construct an average for all the participants and compare conditions.\n\nHow\nTo compute a grand average ERP, follow these steps:\n-&gt; File\n  -&gt; Create study\n    -&gt; Simple ERP study \n    \n\nIf you have analysed all the data from all the participants in the data provided, you should have data from 3 participants, each with 2 conditions. You will need to identify this in the pop-up window that appears next:\n\nIn the following pop-up window you need to include the files that you created in the Segmentation chapter, you should have two files for each participant, one for each condition. Give your study and conditions a name and load up the appropriate files for each participant and each condition. Make sure you load the correct file in to the correct condition as shown below.\n\nAfter clicking Ok the resultant plot that will appear is a grand average ERP for each electrode plotted on a topographic map. This image and the image of the grand average ERPs at electrodes PO7 and PO8 are what is needed for your portfolio. We haven’t provided that final output here as you will need to generate that yourself.",
    "crumbs": [
      "Using EEGLAB",
      "All Participants"
    ]
  },
  {
    "objectID": "12-grandaverage.html#end",
    "href": "12-grandaverage.html#end",
    "title": "All Participants",
    "section": "End",
    "text": "End\nCongratulations on completing the analysis! There’s a lot to learn and a lot to take in so don’t worry if it took you longer than expected. If you’re unsure about certain sections or have got stuck at any point, remember support is available in class but you can also contact the module leaders to ask any questions via email or to book a one-to-one meeting and go through your questions.",
    "crumbs": [
      "Using EEGLAB",
      "All Participants"
    ]
  },
  {
    "objectID": "13-submit.html",
    "href": "13-submit.html",
    "title": "How to Submit",
    "section": "",
    "text": "EEG write up\nDownload and complete the EEG template\nThis template includes an image of the grand average ERP that was generated as the result of the analysis you will have completed if you have gone through the analysis steps correctly - you will need to label and describe this figure. You will also be asked about the analysis procedure you engaged with and to explain elements of the process. Finally, you will be presented with some fictional EEG findings and asked to interpret and explain them.",
    "crumbs": [
      "How to Submit"
    ]
  },
  {
    "objectID": "13-submit.html#written-component",
    "href": "13-submit.html#written-component",
    "title": "How to Submit",
    "section": "Written component",
    "text": "Written component\nYour final portfolio accounts for 80% of your grade for this module. Your EEG analysis and answer to the template questions should form part of your portfolio that should be submitted as one document on MyLearning here (log in to MyLearning required)",
    "crumbs": [
      "How to Submit"
    ]
  },
  {
    "objectID": "Resources.html",
    "href": "Resources.html",
    "title": "Resources",
    "section": "",
    "text": "EEGLAB Specific",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Resources</span>"
    ]
  },
  {
    "objectID": "Resources.html#eeglab-specific",
    "href": "Resources.html#eeglab-specific",
    "title": "Resources",
    "section": "",
    "text": "EEGLAB tutorial",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Resources</span>"
    ]
  },
  {
    "objectID": "Resources.html#matlab-support",
    "href": "Resources.html#matlab-support",
    "title": "Resources",
    "section": "Matlab support",
    "text": "Matlab support\n\nGetting started with Matlab",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Resources</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Jones, A., & Ward, E. V. (2019). Rhythmic temporal structure at\nencoding enhances recognition memory. Journal of Cognitive\nNeuroscience, 31(10), 1549–1562.",
    "crumbs": [
      "References"
    ]
  }
]